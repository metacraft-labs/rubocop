{
  "/home/alehander42/rubocop/spec/rubocop/cop/style/case_equality_spec.rb": {
    "imports": [

    ],
    "main": [
      {
        "kind": "Send",
        "children": [
          {
            "kind": "RubyConst",
            "label": "RSpec"
          },
          {
            "kind": "String",
            "text": "describe"
          },
          {
            "kind": "RubyConst",
            "label": "CaseEquality"
          },
          {
            "kind": "Block",
            "label": {
              "typ": "Variable",
              "label": ""
            },
            "args": [

            ],
            "code": [
              {
                "kind": "Code",
                "children": [
                  {
                    "kind": "Call",
                    "children": [
                      {
                        "kind": "Variable",
                        "typ": null,
                        "label": "subject"
                      },
                      {
                        "kind": "Symbol",
                        "text": "cop"
                      },
                      {
                        "kind": "Block",
                        "label": {
                          "typ": "Variable",
                          "label": ""
                        },
                        "args": [

                        ],
                        "code": [
                          {
                            "kind": "Attribute",
                            "children": [
                              {
                                "kind": "Variable",
                                "typ": null,
                                "label": "described_class",
                                "line": 4,
                                "column": 18
                              },
                              {
                                "kind": "String",
                                "text": "new"
                              }
                            ],
                            "typ": null,
                            "line": 4,
                            "column": 18
                          }
                        ],
                        "typ": null,
                        "return_type": {
                          "kind": "Simple",
                          "label": "RuboCop::Cop::Style::CaseEquality"
                        }
                      }
                    ],
                    "typ": null,
                    "line": 4,
                    "column": 2
                  },
                  {
                    "kind": "Call",
                    "children": [
                      {
                        "kind": "Variable",
                        "typ": null,
                        "label": "it"
                      },
                      {
                        "kind": "String",
                        "text": "registers an offense for ==="
                      },
                      {
                        "kind": "Block",
                        "label": {
                          "typ": "Variable",
                          "label": ""
                        },
                        "args": [

                        ],
                        "code": [
                          {
                            "kind": "Call",
                            "children": [
                              {
                                "kind": "Variable",
                                "typ": null,
                                "label": "expect_offense"
                              },
                              {
                                "kind": "Attribute",
                                "children": [
                                  {
                                    "kind": "Docstring",
                                    "text": "(str \"      Array === var\\n\")"
                                  },
                                  {
                                    "kind": "String",
                                    "text": "strip_indent"
                                  }
                                ],
                                "typ": null,
                                "line": 7,
                                "column": 19
                              }
                            ],
                            "typ": null,
                            "line": 7,
                            "column": 4
                          }
                        ],
                        "typ": null,
                        "return_type": null
                      }
                    ],
                    "typ": {
                      "kind": "Simple",
                      "label": "RSpec::Core::Example"
                    },
                    "line": 6,
                    "column": 2
                  }
                ],
                "typ": null,
                "line": 4,
                "column": 2
              }
            ],
            "typ": null,
            "return_type": null
          }
        ],
        "typ": {
          "kind": "Simple",
          "label": "Class"
        },
        "line": 3,
        "column": 0
      }
    ],
    "classes": [

    ],
    "lines": {
      "4": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "described_class",
              "line": 4,
              "column": 18
            }
          ],
          "typ": null,
          "line": 4,
          "column": 18
        },
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "RubySend",
              "children": [
                {
                  "kind": "Nil",
                  "typ": null
                },
                {
                  "kind": "Variable",
                  "typ": null,
                  "label": "described_class",
                  "line": 4,
                  "column": 18
                }
              ],
              "typ": null,
              "line": 4,
              "column": 18
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "new"
            }
          ],
          "typ": null,
          "line": 4,
          "column": 18
        },
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "subject"
            },
            {
              "kind": "Symbol",
              "text": "cop"
            },
            {
              "kind": "Block",
              "label": {
                "typ": "Variable",
                "label": ""
              },
              "args": [

              ],
              "code": [
                {
                  "kind": "Attribute",
                  "children": [
                    {
                      "kind": "Variable",
                      "typ": null,
                      "label": "described_class",
                      "line": 4,
                      "column": 18
                    },
                    {
                      "kind": "String",
                      "text": "new"
                    }
                  ],
                  "typ": null,
                  "line": 4,
                  "column": 18
                }
              ],
              "typ": null,
              "return_type": {
                "kind": "Simple",
                "label": "RuboCop::Cop::Style::CaseEquality"
              }
            }
          ],
          "typ": null,
          "line": 4,
          "column": 2
        }
      ],
      "7": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Docstring",
              "text": "(str \"      Array === var\\n\")"
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "strip_indent"
            }
          ],
          "typ": null,
          "line": 7,
          "column": 19
        },
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "expect_offense"
            },
            {
              "kind": "RubySend",
              "children": [
                {
                  "kind": "Docstring",
                  "text": "(str \"      Array === var\\n\")"
                },
                {
                  "kind": "Variable",
                  "typ": null,
                  "label": "strip_indent"
                }
              ],
              "typ": null,
              "line": 7,
              "column": 19
            }
          ],
          "typ": null,
          "line": 7,
          "column": 4
        }
      ],
      "6": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "it"
            },
            {
              "kind": "String",
              "text": "registers an offense for ==="
            },
            {
              "kind": "Block",
              "label": {
                "typ": "Variable",
                "label": ""
              },
              "args": [

              ],
              "code": [
                {
                  "kind": "Call",
                  "children": [
                    {
                      "kind": "Variable",
                      "typ": null,
                      "label": "expect_offense"
                    },
                    {
                      "kind": "Attribute",
                      "children": [
                        {
                          "kind": "Docstring",
                          "text": "(str \"      Array === var\\n\")"
                        },
                        {
                          "kind": "String",
                          "text": "strip_indent"
                        }
                      ],
                      "typ": null,
                      "line": 7,
                      "column": 19
                    }
                  ],
                  "typ": null,
                  "line": 7,
                  "column": 4
                }
              ],
              "typ": null,
              "return_type": null
            }
          ],
          "typ": {
            "kind": "Simple",
            "label": "RSpec::Core::Example"
          },
          "line": 6,
          "column": 2
        }
      ],
      "3": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "RubyConst",
              "label": "RSpec"
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "describe"
            },
            {
              "kind": "RubyConst",
              "label": "CaseEquality"
            },
            {
              "kind": "Block",
              "label": {
                "typ": "Variable",
                "label": ""
              },
              "args": [

              ],
              "code": [
                {
                  "kind": "Code",
                  "children": [
                    {
                      "kind": "Call",
                      "children": [
                        {
                          "kind": "Variable",
                          "typ": null,
                          "label": "subject"
                        },
                        {
                          "kind": "Symbol",
                          "text": "cop"
                        },
                        {
                          "kind": "Block",
                          "label": {
                            "typ": "Variable",
                            "label": ""
                          },
                          "args": [

                          ],
                          "code": [
                            {
                              "kind": "Attribute",
                              "children": [
                                {
                                  "kind": "Variable",
                                  "typ": null,
                                  "label": "described_class",
                                  "line": 4,
                                  "column": 18
                                },
                                {
                                  "kind": "String",
                                  "text": "new"
                                }
                              ],
                              "typ": null,
                              "line": 4,
                              "column": 18
                            }
                          ],
                          "typ": null,
                          "return_type": {
                            "kind": "Simple",
                            "label": "RuboCop::Cop::Style::CaseEquality"
                          }
                        }
                      ],
                      "typ": null,
                      "line": 4,
                      "column": 2
                    },
                    {
                      "kind": "Call",
                      "children": [
                        {
                          "kind": "Variable",
                          "typ": null,
                          "label": "it"
                        },
                        {
                          "kind": "String",
                          "text": "registers an offense for ==="
                        },
                        {
                          "kind": "Block",
                          "label": {
                            "typ": "Variable",
                            "label": ""
                          },
                          "args": [

                          ],
                          "code": [
                            {
                              "kind": "Call",
                              "children": [
                                {
                                  "kind": "Variable",
                                  "typ": null,
                                  "label": "expect_offense"
                                },
                                {
                                  "kind": "Attribute",
                                  "children": [
                                    {
                                      "kind": "Docstring",
                                      "text": "(str \"      Array === var\\n\")"
                                    },
                                    {
                                      "kind": "String",
                                      "text": "strip_indent"
                                    }
                                  ],
                                  "typ": null,
                                  "line": 7,
                                  "column": 19
                                }
                              ],
                              "typ": null,
                              "line": 7,
                              "column": 4
                            }
                          ],
                          "typ": null,
                          "return_type": null
                        }
                      ],
                      "typ": {
                        "kind": "Simple",
                        "label": "RSpec::Core::Example"
                      },
                      "line": 6,
                      "column": 2
                    }
                  ],
                  "typ": null,
                  "line": 4,
                  "column": 2
                }
              ],
              "typ": null,
              "return_type": null
            }
          ],
          "typ": {
            "kind": "Simple",
            "label": "Class"
          },
          "line": 3,
          "column": 0
        }
      ]
    },
    "method_lines": {
      "4": {
        "kind": "Block",
        "label": {
          "typ": "Variable",
          "label": ""
        },
        "args": [

        ],
        "code": [
          {
            "kind": "Attribute",
            "children": [
              {
                "kind": "Variable",
                "typ": null,
                "label": "described_class",
                "line": 4,
                "column": 18
              },
              {
                "kind": "String",
                "text": "new"
              }
            ],
            "typ": null,
            "line": 4,
            "column": 18
          }
        ],
        "typ": null,
        "return_type": {
          "kind": "Simple",
          "label": "RuboCop::Cop::Style::CaseEquality"
        }
      },
      "6": {
        "kind": "Block",
        "label": {
          "typ": "Variable",
          "label": ""
        },
        "args": [

        ],
        "code": [
          {
            "kind": "Call",
            "children": [
              {
                "kind": "Variable",
                "typ": null,
                "label": "expect_offense"
              },
              {
                "kind": "Attribute",
                "children": [
                  {
                    "kind": "Docstring",
                    "text": "(str \"      Array === var\\n\")"
                  },
                  {
                    "kind": "String",
                    "text": "strip_indent"
                  }
                ],
                "typ": null,
                "line": 7,
                "column": 19
              }
            ],
            "typ": null,
            "line": 7,
            "column": 4
          }
        ],
        "typ": null,
        "return_type": null
      },
      "3": {
        "kind": "Block",
        "label": {
          "typ": "Variable",
          "label": ""
        },
        "args": [

        ],
        "code": [
          {
            "kind": "Code",
            "children": [
              {
                "kind": "Call",
                "children": [
                  {
                    "kind": "Variable",
                    "typ": null,
                    "label": "subject"
                  },
                  {
                    "kind": "Symbol",
                    "text": "cop"
                  },
                  {
                    "kind": "Block",
                    "label": {
                      "typ": "Variable",
                      "label": ""
                    },
                    "args": [

                    ],
                    "code": [
                      {
                        "kind": "Attribute",
                        "children": [
                          {
                            "kind": "Variable",
                            "typ": null,
                            "label": "described_class",
                            "line": 4,
                            "column": 18
                          },
                          {
                            "kind": "String",
                            "text": "new"
                          }
                        ],
                        "typ": null,
                        "line": 4,
                        "column": 18
                      }
                    ],
                    "typ": null,
                    "return_type": {
                      "kind": "Simple",
                      "label": "RuboCop::Cop::Style::CaseEquality"
                    }
                  }
                ],
                "typ": null,
                "line": 4,
                "column": 2
              },
              {
                "kind": "Call",
                "children": [
                  {
                    "kind": "Variable",
                    "typ": null,
                    "label": "it"
                  },
                  {
                    "kind": "String",
                    "text": "registers an offense for ==="
                  },
                  {
                    "kind": "Block",
                    "label": {
                      "typ": "Variable",
                      "label": ""
                    },
                    "args": [

                    ],
                    "code": [
                      {
                        "kind": "Call",
                        "children": [
                          {
                            "kind": "Variable",
                            "typ": null,
                            "label": "expect_offense"
                          },
                          {
                            "kind": "Attribute",
                            "children": [
                              {
                                "kind": "Docstring",
                                "text": "(str \"      Array === var\\n\")"
                              },
                              {
                                "kind": "String",
                                "text": "strip_indent"
                              }
                            ],
                            "typ": null,
                            "line": 7,
                            "column": 19
                          }
                        ],
                        "typ": null,
                        "line": 7,
                        "column": 4
                      }
                    ],
                    "typ": null,
                    "return_type": null
                  }
                ],
                "typ": {
                  "kind": "Simple",
                  "label": "RSpec::Core::Example"
                },
                "line": 6,
                "column": 2
              }
            ],
            "typ": null,
            "line": 4,
            "column": 2
          }
        ],
        "typ": null,
        "return_type": null
      }
    }
  },
  "/home/alehander42/rubocop/lib/rubocop/cop/style/case_equality.rb": {
    "imports": [

    ],
    "main": [
      {
        "kind": "Assign",
        "children": [
          {
            "kind": "Variable",
            "label": "MSG"
          },
          {
            "kind": "String",
            "text": "Avoid the use of the case equality operator `===`."
          }
        ],
        "declaration": "Const"
      },
      {
        "kind": "Call",
        "children": [
          {
            "kind": "Variable",
            "typ": null,
            "label": "def_node_matcher"
          },
          {
            "kind": "Symbol",
            "text": "case_equality?"
          },
          {
            "kind": "String",
            "text": "(send _ :=== _)"
          }
        ],
        "typ": null,
        "line": 23,
        "column": 8
      }
    ],
    "classes": [
      {
        "kind": "Class",
        "label": "CaseEquality",
        "methods": [
          {
            "label": "on_send",
            "node": {
              "kind": "NodeMethod",
              "label": {
                "typ": "Variable",
                "label": "on_send"
              },
              "args": [
                {
                  "kind": "Variable",
                  "label": "self",
                  "typ": {
                    "kind": "Simple",
                    "label": "RuboCop::Cop::Style::CaseEquality"
                  }
                },
                {
                  "kind": "Variable",
                  "label": "node",
                  "typ": {
                    "kind": "Simple",
                    "label": "RuboCop::AST::SendNode"
                  }
                }
              ],
              "code": [
                {
                  "kind": "Call",
                  "children": [
                    {
                      "kind": "Variable",
                      "typ": null,
                      "label": "case_equality?"
                    },
                    {
                      "kind": "Variable",
                      "label": "node"
                    },
                    {
                      "kind": "Block",
                      "label": {
                        "typ": "Variable",
                        "label": ""
                      },
                      "args": [

                      ],
                      "code": [
                        {
                          "kind": "Call",
                          "children": [
                            {
                              "kind": "Variable",
                              "typ": null,
                              "label": "add_offense"
                            },
                            {
                              "kind": "Variable",
                              "label": "node"
                            },
                            {
                              "kind": "Pair",
                              "children": [
                                {
                                  "kind": "Symbol",
                                  "text": "location"
                                },
                                {
                                  "kind": "Symbol",
                                  "text": "selector"
                                }
                              ],
                              "typ": null,
                              "line": 26,
                              "column": 51
                            }
                          ],
                          "typ": null,
                          "line": 26,
                          "column": 33
                        }
                      ],
                      "typ": null,
                      "return_type": {
                        "kind": "Simple",
                        "label": "NilClass"
                      }
                    }
                  ],
                  "typ": {
                    "kind": "Simple",
                    "label": "NilClass"
                  },
                  "line": 26,
                  "column": 10
                }
              ],
              "typ": null,
              "return_type": {
                "kind": "Simple",
                "label": "NilClass"
              },
              "line": 25,
              "column": 8
            }
          }
        ],
        "fields": [

        ],
        "typ": {
          "kind": "Object",
          "label": "RuboCop::Cop::Style::CaseEquality",
          "fields": [
            {
              "kind": "Simple",
              "label": "RuboCop::Config",
              "fieldLabel": "config"
            },
            {
              "kind": "Simple",
              "label": "Hash",
              "fieldLabel": "options"
            },
            {
              "kind": "Simple",
              "label": "Array",
              "fieldLabel": "offenses"
            },
            {
              "kind": "Simple",
              "label": "Array",
              "fieldLabel": "corrections"
            },
            {
              "kind": "Simple",
              "label": "Hash",
              "fieldLabel": "corrected_nodes"
            },
            {
              "kind": "Simple",
              "label": "NilClass",
              "fieldLabel": "processed_source"
            }
          ],
          "base": {
            "kind": "Simple",
            "label": "Cop"
          }
        }
      }
    ],
    "lines": {
      "23": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "def_node_matcher"
            },
            {
              "kind": "Symbol",
              "text": "case_equality?"
            },
            {
              "kind": "String",
              "text": "(send _ :=== _)"
            }
          ],
          "typ": null,
          "line": 23,
          "column": 8
        }
      ],
      "26": [
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "add_offense"
            },
            {
              "kind": "Variable",
              "label": "node"
            },
            {
              "kind": "Table",
              "children": [
                {
                  "kind": "Pair",
                  "children": [
                    {
                      "kind": "Symbol",
                      "text": "location"
                    },
                    {
                      "kind": "Symbol",
                      "text": "selector"
                    }
                  ],
                  "typ": null,
                  "line": 26,
                  "column": 51
                }
              ],
              "typ": null,
              "line": 26,
              "column": 51
            }
          ],
          "typ": null,
          "line": 26,
          "column": 33
        },
        {
          "kind": "RubySend",
          "children": [
            {
              "kind": "Nil",
              "typ": null
            },
            {
              "kind": "Variable",
              "typ": null,
              "label": "case_equality?"
            },
            {
              "kind": "Variable",
              "label": "node"
            },
            {
              "kind": "Block",
              "label": {
                "typ": "Variable",
                "label": ""
              },
              "args": [

              ],
              "code": [
                {
                  "kind": "Call",
                  "children": [
                    {
                      "kind": "Variable",
                      "typ": null,
                      "label": "add_offense"
                    },
                    {
                      "kind": "Variable",
                      "label": "node"
                    },
                    {
                      "kind": "Pair",
                      "children": [
                        {
                          "kind": "Symbol",
                          "text": "location"
                        },
                        {
                          "kind": "Symbol",
                          "text": "selector"
                        }
                      ],
                      "typ": null,
                      "line": 26,
                      "column": 51
                    }
                  ],
                  "typ": null,
                  "line": 26,
                  "column": 33
                }
              ],
              "typ": null,
              "return_type": {
                "kind": "Simple",
                "label": "NilClass"
              }
            }
          ],
          "typ": {
            "kind": "Simple",
            "label": "NilClass"
          },
          "line": 26,
          "column": 10
        }
      ]
    },
    "method_lines": {
      "26": {
        "kind": "Block",
        "label": {
          "typ": "Variable",
          "label": ""
        },
        "args": [

        ],
        "code": [
          {
            "kind": "Call",
            "children": [
              {
                "kind": "Variable",
                "typ": null,
                "label": "add_offense"
              },
              {
                "kind": "Variable",
                "label": "node"
              },
              {
                "kind": "Pair",
                "children": [
                  {
                    "kind": "Symbol",
                    "text": "location"
                  },
                  {
                    "kind": "Symbol",
                    "text": "selector"
                  }
                ],
                "typ": null,
                "line": 26,
                "column": 51
              }
            ],
            "typ": null,
            "line": 26,
            "column": 33
          }
        ],
        "typ": null,
        "return_type": {
          "kind": "Simple",
          "label": "NilClass"
        }
      },
      "25": {
        "kind": "NodeMethod",
        "label": {
          "typ": "Variable",
          "label": "on_send"
        },
        "args": [
          {
            "kind": "Variable",
            "label": "self",
            "typ": {
              "kind": "Simple",
              "label": "RuboCop::Cop::Style::CaseEquality"
            }
          },
          {
            "kind": "Variable",
            "label": "node",
            "typ": {
              "kind": "Simple",
              "label": "RuboCop::AST::SendNode"
            }
          }
        ],
        "code": [
          {
            "kind": "Call",
            "children": [
              {
                "kind": "Variable",
                "typ": null,
                "label": "case_equality?"
              },
              {
                "kind": "Variable",
                "label": "node"
              },
              {
                "kind": "Block",
                "label": {
                  "typ": "Variable",
                  "label": ""
                },
                "args": [

                ],
                "code": [
                  {
                    "kind": "Call",
                    "children": [
                      {
                        "kind": "Variable",
                        "typ": null,
                        "label": "add_offense"
                      },
                      {
                        "kind": "Variable",
                        "label": "node"
                      },
                      {
                        "kind": "Pair",
                        "children": [
                          {
                            "kind": "Symbol",
                            "text": "location"
                          },
                          {
                            "kind": "Symbol",
                            "text": "selector"
                          }
                        ],
                        "typ": null,
                        "line": 26,
                        "column": 51
                      }
                    ],
                    "typ": null,
                    "line": 26,
                    "column": 33
                  }
                ],
                "typ": null,
                "return_type": {
                  "kind": "Simple",
                  "label": "NilClass"
                }
              }
            ],
            "typ": {
              "kind": "Simple",
              "label": "NilClass"
            },
            "line": 26,
            "column": 10
          }
        ],
        "typ": null,
        "return_type": {
          "kind": "Simple",
          "label": "NilClass"
        },
        "line": 25,
        "column": 8
      }
    }
  },
  "%types": {
    "RSpec::Core::FilterableItemRepository::UpdateOptimized": {
      "kind": "Object",
      "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
      "fields": [
        {
          "kind": "Simple",
          "label": "Symbol",
          "fieldLabel": "applies_predicate"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "items_and_filters"
        }
      ]
    },
    "UpdateOptimized": {
      "kind": "Object",
      "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
      "fields": [
        {
          "kind": "Simple",
          "label": "Symbol",
          "fieldLabel": "applies_predicate"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "items_and_filters"
        }
      ]
    },
    "RSpec::Core::Hooks::HookCollections": {
      "kind": "Object",
      "label": "RSpec::Core::Hooks::HookCollections",
      "fields": [
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "owner"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "filterable_item_repo_class"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "before_example_hooks"
        },
        {
          "kind": "Simple",
          "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
          "fieldLabel": "after_example_hooks"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "before_context_hooks"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "after_context_hooks"
        },
        {
          "kind": "Simple",
          "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
          "fieldLabel": "around_example_hooks"
        }
      ]
    },
    "HookCollections": {
      "kind": "Object",
      "label": "RSpec::Core::Hooks::HookCollections",
      "fields": [
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "owner"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "filterable_item_repo_class"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "before_example_hooks"
        },
        {
          "kind": "Simple",
          "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
          "fieldLabel": "after_example_hooks"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "before_context_hooks"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "after_context_hooks"
        },
        {
          "kind": "Simple",
          "label": "RSpec::Core::FilterableItemRepository::UpdateOptimized",
          "fieldLabel": "around_example_hooks"
        }
      ]
    },
    "Class": {
      "kind": "Object",
      "label": "Class",
      "fields": [
        {
          "kind": "Compound",
          "args": [
            {
              "kind": "Simple",
              "label": "Void"
            },
            {
              "kind": "Simple",
              "label": "Void"
            }
          ],
          "original": {
            "kind": "Generic",
            "label": "Table",
            "genericArgs": [
              "K",
              "V"
            ]
          },
          "fieldLabel": "user_metadata"
        },
        {
          "kind": "Simple",
          "label": "Void",
          "fieldLabel": "superclass_metadata"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "metadata"
        },
        {
          "kind": "Simple",
          "label": "Bool",
          "fieldLabel": "currently_executing_a_context_hook"
        },
        {
          "kind": "Simple",
          "label": "RSpec::Core::Hooks::HookCollections",
          "fieldLabel": "hooks"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "parent_groups"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "examples"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "children"
        }
      ]
    },
    "RSpec::Core::Example": {
      "kind": "Object",
      "label": "RSpec::Core::Example",
      "fields": [
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "example_group_class"
        },
        {
          "kind": "Simple",
          "label": "Proc",
          "fieldLabel": "example_block"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "metadata"
        },
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "id"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "exception"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "example_group_instance"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "clock"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "reporter"
        }
      ]
    },
    "Example": {
      "kind": "Object",
      "label": "RSpec::Core::Example",
      "fields": [
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "example_group_class"
        },
        {
          "kind": "Simple",
          "label": "Proc",
          "fieldLabel": "example_block"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "metadata"
        },
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "id"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "exception"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "example_group_instance"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "clock"
        },
        {
          "kind": "Simple",
          "label": "Class",
          "fieldLabel": "reporter"
        }
      ]
    },
    "RuboCop::Config": {
      "kind": "Object",
      "label": "RuboCop::Config",
      "fields": [
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "loaded_path"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "for_cop"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "hash"
        }
      ]
    },
    "Config": {
      "kind": "Object",
      "label": "RuboCop::Config",
      "fields": [
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "loaded_path"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "for_cop"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "hash"
        }
      ]
    },
    "RuboCop::Cop::Style::CaseEquality": {
      "kind": "Object",
      "label": "RuboCop::Cop::Style::CaseEquality",
      "fields": [
        {
          "kind": "Simple",
          "label": "RuboCop::Config",
          "fieldLabel": "config"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "options"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "offenses"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "corrections"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "corrected_nodes"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "processed_source"
        }
      ],
      "base": {
        "kind": "Simple",
        "label": "Cop"
      }
    },
    "Parser::Source::Buffer": {
      "kind": "Object",
      "label": "Parser::Source::Buffer",
      "fields": [
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "name"
        },
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "source"
        },
        {
          "kind": "Simple",
          "label": "Int",
          "fieldLabel": "first_line"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "lines"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "line_begins"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "slice_source"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "line_for_position"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "column_for_position"
        }
      ]
    },
    "Buffer": {
      "kind": "Object",
      "label": "Parser::Source::Buffer",
      "fields": [
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "name"
        },
        {
          "kind": "Simple",
          "label": "String",
          "fieldLabel": "source"
        },
        {
          "kind": "Simple",
          "label": "Int",
          "fieldLabel": "first_line"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "lines"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "line_begins"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "slice_source"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "line_for_position"
        },
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "column_for_position"
        }
      ]
    },
    "Parser::Source::Range": {
      "kind": "Object",
      "label": "Parser::Source::Range",
      "fields": [
        {
          "kind": "Simple",
          "label": "Parser::Source::Buffer",
          "fieldLabel": "source_buffer"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "end_pos"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "begin_pos"
        }
      ]
    },
    "Range": {
      "kind": "Object",
      "label": "Parser::Source::Range",
      "fields": [
        {
          "kind": "Simple",
          "label": "Parser::Source::Buffer",
          "fieldLabel": "source_buffer"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "end_pos"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "begin_pos"
        }
      ]
    },
    "Parser::Source::Map::Send": {
      "kind": "Object",
      "label": "Parser::Source::Map::Send",
      "fields": [
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "dot"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Range",
          "fieldLabel": "selector"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "end"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "begin"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Range",
          "fieldLabel": "expression"
        },
        {
          "kind": "Simple",
          "label": "RuboCop::AST::SendNode",
          "fieldLabel": "node"
        }
      ]
    },
    "Send": {
      "kind": "Object",
      "label": "Parser::Source::Map::Send",
      "fields": [
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "dot"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Range",
          "fieldLabel": "selector"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "end"
        },
        {
          "kind": "Simple",
          "label": "NilClass",
          "fieldLabel": "begin"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Range",
          "fieldLabel": "expression"
        },
        {
          "kind": "Simple",
          "label": "RuboCop::AST::SendNode",
          "fieldLabel": "node"
        }
      ]
    },
    "RuboCop::AST::SendNode": {
      "kind": "Object",
      "label": "RuboCop::AST::SendNode",
      "fields": [
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "mutable_attributes"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "children"
        },
        {
          "kind": "Simple",
          "label": "Symbol",
          "fieldLabel": "type"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Map::Send",
          "fieldLabel": "location"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "hash"
        }
      ]
    },
    "SendNode": {
      "kind": "Object",
      "label": "RuboCop::AST::SendNode",
      "fields": [
        {
          "kind": "Simple",
          "label": "Hash",
          "fieldLabel": "mutable_attributes"
        },
        {
          "kind": "Simple",
          "label": "Array",
          "fieldLabel": "children"
        },
        {
          "kind": "Simple",
          "label": "Symbol",
          "fieldLabel": "type"
        },
        {
          "kind": "Simple",
          "label": "Parser::Source::Map::Send",
          "fieldLabel": "location"
        },
        {
          "kind": "Simple",
          "label": "Integer",
          "fieldLabel": "hash"
        }
      ]
    }
  }
}